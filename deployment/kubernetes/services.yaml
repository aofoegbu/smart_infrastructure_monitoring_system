apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: sims
  labels:
    app: auth-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: sims/auth-service:latest
        env:
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/sims"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: sims-secrets
              key: postgres-username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sims-secrets
              key: postgres-password
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: sims-secrets
              key: jwt-secret-key
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: redis.host
        ports:
        - containerPort: 8001
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: sims
spec:
  selector:
    app: auth-service
  ports:
  - port: 8001
    targetPort: 8001
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-service
  namespace: sims
  labels:
    app: data-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: data-service
  template:
    metadata:
      labels:
        app: data-service
    spec:
      containers:
      - name: data-service
        image: sims/data-service:latest
        env:
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/sims"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: sims-secrets
              key: postgres-username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sims-secrets
              key: postgres-password
        - name: AUTH_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: auth.service.url
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: kafka.bootstrap.servers
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: redis.host
        ports:
        - containerPort: 8002
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: data-service
  namespace: sims
spec:
  selector:
    app: data-service
  ports:
  - port: 8002
    targetPort: 8002
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-service
  namespace: sims
  labels:
    app: ml-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ml-service
  template:
    metadata:
      labels:
        app: ml-service
    spec:
      containers:
      - name: ml-service
        image: sims/ml-service:latest
        env:
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/sims"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: sims-secrets
              key: postgres-username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sims-secrets
              key: postgres-password
        - name: AUTH_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: auth.service.url
        - name: DATA_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: data.service.url
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: kafka.bootstrap.servers
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: redis.host
        ports:
        - containerPort: 8003
        volumeMounts:
        - name: ml-models
          mountPath: /app/models
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: ml-models
        persistentVolumeClaim:
          claimName: ml-models-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-models-pvc
  namespace: sims
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ml-service
  namespace: sims
spec:
  selector:
    app: ml-service
  ports:
  - port: 8003
    targetPort: 8003
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streaming-service
  namespace: sims
  labels:
    app: streaming-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: streaming-service
  template:
    metadata:
      labels:
        app: streaming-service
    spec:
      containers:
      - name: streaming-service
        image: sims/streaming-service:latest
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: kafka.bootstrap.servers
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: redis.host
        - name: MQTT_BROKER
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: mqtt.broker
        - name: AUTH_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: auth.service.url
        ports:
        - containerPort: 8004
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: streaming-service
  namespace: sims
spec:
  selector:
    app: streaming-service
  ports:
  - port: 8004
    targetPort: 8004
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-service
  namespace: sims
  labels:
    app: gateway-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: gateway-service
  template:
    metadata:
      labels:
        app: gateway-service
    spec:
      containers:
      - name: gateway-service
        image: sims/gateway-service:latest
        env:
        - name: AUTH_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: auth.service.url
        - name: DATA_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: data.service.url
        - name: ML_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: ml.service.url
        - name: STREAMING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: streaming.service.url
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: sims-config
              key: redis.host
        ports:
        - containerPort: 8000
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /gateway/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /gateway/health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: sims
spec:
  selector:
    app: gateway-service
  ports:
  - port: 8000
    targetPort: 8000
  type: LoadBalancer